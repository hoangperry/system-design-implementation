# docker-compose.yml

version: '3.8'

services:
  pg_database:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./shortener.sql:/docker-entrypoint-initdb.d/shortener.sql
    ports:
      - "5432:5432"

  web_service:
    restart: always
    build:
      context: .
      dockerfile: shortener.Dockerfile
    volumes:
      - .:/home/app/web
    command: ./server_entrypoint
    depends_on:
      - pg_database
    ports:
      - "8000:8000"
    links:
      - pg_database

  nginx:
    restart: always
    image: nginx:alpine
    volumes:
      - ./nginx/www:/var/www:ro
      - ./nginx/sites-enabled/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/snippets:/etc/nginx/snippets:ro
      - ./nginx/protect:/etc/nginx/protect:ro
      - shortener_static_volume:/home/app/web/static
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - web_service
    links:
      - web_service

  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      - nginx
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/ssl-log:/var/log/letsencrypt
      - ./nginx/www/.well-known:/var/www/.well-known
    command: [
      "renew",
    ]

    links:
      - nginx

volumes:
  shortener_static_volume:
